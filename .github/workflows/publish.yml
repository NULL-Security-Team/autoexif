name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  build-and-test:
    name: Build and test on Ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.11"]
    steps:
      - uses: actions/checkout@v4
      
      # Step to clear the pip cache
      - name: Clear pip cache
        run: rm -rf ~/.cache/pip

      # Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      # Cache Python dependencies (optional, adjust path as needed)
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build pytest

      # Build package
      - name: Build package
        run: python -m build

      # Install the package
      - name: Install package
        run: pip install dist/autoexif-*.whl

      # Test the package
      - name: Test package
        run: |
          autoexif --help  # Basic test to ensure CLI works
        shell: bash

  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    needs: build-and-test
    environment: release
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      
      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      # Cache Python dependencies (optional, adjust path as needed)
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      # Build package
      - name: Build package
        run: python -m build

      # Publish to PyPI
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
