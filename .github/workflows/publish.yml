name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  build-and-test:
    name: Build and test on Ubuntu
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Show Python versions
        run: |
          which python
          python --version
          ls /opt/hostedtoolcache/Python/

      - name: Clear pip cache
        run: rm -rf ~/.cache/pip

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build pytest

      - name: Build package
        run: python -m build

      - name: Install built package
        run: pip install dist/autoexif-*.whl

      - name: Test package CLI
        run: autoexif --help
        shell: bash

  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-22.04
    needs: build-and-test
    environment: release
    permissions:
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Show Python versions
        run: |
          which python
          python --version
          ls /opt/hostedtoolcache/Python/

      - name: Clear pip cache
        run: rm -rf ~/.cache/pip

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
